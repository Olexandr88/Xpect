/*******************************************************************************
 * Copyright (c) 2012-2017 TypeFox GmbH and itemis AG.
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Moritz Eysholdt - Initial contribution and API
 *******************************************************************************/

module org.eclipse.xpect.GenerateXpect

import org.eclipse.xpect.mwe2.*
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."
var projectName = "org.eclipse.xpect"
var genmodelURI = "platform:/resource/${projectName}/model/Xpect.genmodel"
//var xjmEcoreURI = "platform:/resource/${projectName}/model/XpectJavaModel.ecore"
var runtimeProject = "${rootPath}/${projectName}"

Workflow {
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.eclipse.xpect"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = false
					root = "${rootPath}/org.eclipse.xpect.ui.junit"
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {
			referencedResource = "${genmodelURI}"
			name = "org.eclipse.xpect.Xpect"
			fileExtensions = "xpect"

			serializer = {
				generateStub = false
			}
			validator = {
				generateStub = false
			}
			generator = {
				generateStub = false
			}
			junitSupport = {
				generateStub = false
				junitVersion = "5"
			}

			parserGenerator = {
				combinedGrammar = false
				options = {
					
				}
			}
			
			commonTypesSupport = {
				onlyEnabledIfGrammarIsUsed = false
			}
			
			fragment = StatefulLexerFragment {
				runtime = true
				lexerGrammar = "org.eclipse.xpect.services.Lexer"
				antlrParam = "-lib"
				antlrParam = "${runtimeProject}/src-gen/org/eclipse/xpect/parser/antlr/lexer"
			}

			fragment = StatefulLexerFragment {
				contentAssist = true
				lexerGrammar = "org.eclipse.xpect.ide.services.Lexer"
				antlrParam = "-lib"
				antlrParam = "${runtimeProject}.ide/src-gen/org/eclipse/xpect/ide/contentassist/antlr/lexer"
			}
			
			fragment = StatefulLexerFragment {
				highlighting = true
				lexerGrammar = "org.eclipse.xpect.services.Lexer"
				antlrParam = "-lib"
				antlrParam = "${runtimeProject}.ide/src-gen/org/eclipse/xpect/ide/contentassist/antlr/lexer"
			}
		}
	}

	component = org.eclipse.emf.mwe2.ecore.EcoreGenerator {
		genModel = genmodelURI
		srcPath = "${runtimeProject}/src"
	}
}
